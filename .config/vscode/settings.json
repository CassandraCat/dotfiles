{
  /*
   * Workbench settings
   */
  "workbench.startupEditor": "none",
  "workbench.colorTheme": "Catppuccin Mocha",
  "workbench.editor.tabSizing": "shrink",
  "workbench.iconTheme": "catppuccin-mocha",
  "workbench.list.smoothScrolling": true,
  "workbench.editor.wrapTabs": true,
  "workbench.colorCustomizations": {
    "activityBar.border": "#00000000",
    "activityBar.activeBorder": "#00000000",
    "activityBar.dropBorder": "#00000000",
    "activityBar.foreground": "#29B6F6",
    "activityBar.inactiveForeground": "#01589b99",
    "activityBarBadge.background": "#0C1125",
    "activityBarBadge.foreground": "#29B6F6",

    "badge.foreground": "#29B6F6",
    "badge.background": "#0C1125",
    "button.background": "#01589b99",

    "editorCursor.foreground": "#1979c2",
    "editorCursor.background": "#1979c2",
    "editorOverviewRuler.border": "#00000000",
    "editorLineNumber.foreground": "#01589b99",
    "editorLineNumber.activeForeground": "#1979c2",
    "editorWidget.border": "#1979c2",
    "editorWidget.background": "#0C1125",
    "editorSuggestWidget.border": "#01589b99",
    "editorGroupHeader.tabsBorder": "#00000000",
    "editorGroupHeader.tabsBackground": "#00000000",
    "editor.lineHighlightBackground": "#1e1e1e00",
    "editor.lineHighlightBorder": "#1e1e1e00",
    "focusBorder": "#00000000",

    "gitDecoration.modifiedResourceForeground": "#81bae6",
    "gitDecoration.untrackedResourceForeground": "#81bae6",
    "gitDecoration.ignoredResourceForeground": "#81bae6",
    "gitDecoration.addedResourceForeground": "#81bae6",
    "gitDecoration.renamedResourceForeground": "#81bae6",

    "input.border": "#01589b99",
    "input.background": "#0C1125",
    "input.foreground": "#29B6F6",
    "icon.foreground": "#29B6F6",

    "list.focusOutline": "#191923",
    "list.focusBackground": "#191923",
    "list.focusForeground": "#29B6F6",
    "list.hoverForeground": "#29B6F6",
    "list.hoverBackground": "#1e1e1e00",
    "list.focusAndSelectionOutline": "#00000000",
    "list.activeSelectionForeground": "#29B6F6",
    "list.activeSelectionBackground": "#191923",
    "list.inactiveSelectionForeground": "#29B6F6",
    "list.inactiveSelectionBackground": "#191923",

    "panelTitle.activeBorder": "#29B6F6",
    "panelTitle.activeForeground": "#29B6F6",
    "panelTitle.inactiveForeground": "#01589b99",
    "peekView.border": "#1979c2",
    "peekViewTitle.background": "#00000000",
    "peekViewResult.background": "#00000000",
    "peekViewEditor.background": "#00000000",
    "peekViewEditorGutter.background": "#00000000",
    "peekViewEditor.matchHighlightBackground": "#00000000",
    "peekViewEditor.matchHighlightBorder": "#00000000",

    "quickInputList.focusBackground": "#0b1123",
    "quickInputList.focusIconForeground": "#29B6F6",

    "sideBar.border": "#00000000",
    "sideBar.foreground": "#1979c2",
    "sideBarTitle.foreground": "#29B6F6",
    "sideBarSectionHeader.foreground": "#29B6F6",
    "sideBarSectionHeader.background": "#00000000",
    "sideBarSectionHeader.border": "#00000000",
    "statusBar.border": "#00000000",
    "statusBar.focusBorder": "#00000000",
    "statusBar.foreground": "#1979c2",
    "statusBar.debuggingBackground": "#00000000",
    "statusBar.noFolderBackground": "#00000000",
    "statusBarItem.activeBackground": "#00000000",
    "settings.dropdownBackground": "#0C1125",

    "tab.border": "#00000000",
    "tab.activeBorder": "#29B6F6",
    "tab.activeModifiedBorder": "#00000000",
    "tab.inactiveModifiedBorder": "#00000000",
    "tab.activeBorderTop": "#00000000",
    "tab.activeForeground": "#29B6F6",
    "tab.inactiveForeground": "#1979c2",
    "tab.activeBackground": "#00000000",
    "tab.inactiveBackground": "#00000000",
    "tab.lastPinnedBorder": "#00000000",
    "titleBar.activeBackground": "#0C1125",
    "titleBar.inactiveBackground": "#0C1125",
    "titleBar.activeForeground": "#29B6F6",
    "terminal.border": "#00000000",
    "terminalCursor.foreground": "#29B6F6",
    "terminalCursor.background": "#29B6F6",
    "tree.indentGuidesStroke": "#00000000",

    "widget.shadow": "#00000000"
  },

  /*
   * Editor settings
   */
  "editor.formatOnSave": true,
  "editor.lineNumbers": "relative",
  "editor.fontSize": 18.5,
  "editor.fontFamily": "Cavolini,Yuppy SC,MonaspiceRn Nerd Font Propo,JetBrains Mono",
  "editor.fontLigatures": true,
  "editor.unicodeHighlight.allowedLocales": {
    "zh-hans": true,
    "zh-hant": true
  },
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.cursorBlinking": "smooth",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.minimap.enabled": false,
  "editor.minimap.autohide": true,
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.verticalScrollbarSize": 0,
  "editor.renderLineHighlight": "line",
  "editor.wordWrap": "on",
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.suggestSelection": "recentlyUsed",
  "editor.smoothScrolling": true,
  "editor.fontWeight": "bold",
  "editor.tabCompletion": "on",
  "editor.inlineSuggest.enabled": true,
  "editor.snippetSuggestions": "bottom",
  "editor.stickyScroll.enabled": true,
  "editor.inlayHints.enabled": "on",
  "editor.inlayHints.padding": false,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "name": "Default",
        "scope": [
          "",
          "support.type.property-name.json",
          "meta.attribute.unrecognized",
          "support.type.property-name.css",
          "meta.field.declaration",
          "meta.template.expression"
        ],
        "settings": {
          "foreground": "#ddd"
        }
      },
      {
        "name": "Grey - comments",
        "scope": ["comment"],
        "settings": {
          "foreground": "#455A64"
        }
      },
      {
        "name": "Green - string",
        "scope": [
          "string.quoted.single",
          "string.quoted.double",
          "string.template",
          "punctuation.definition.string.template",
          "variable.parameter.url.css"
        ],
        "settings": {
          "foreground": "#98c379"
        }
      },
      {
        "name": "Purple - number",
        "scope": [
          "constant.numeric",
          "keyword.other.unit",
          "constant.other.color.rgb-value.hex"
        ],
        "settings": {
          "foreground": "#c678dd"
        }
      },
      {
        "name": "Yellow - Keywords",
        "scope": [
          "keyword.control",
          "keyword.operator",
          "variable.language",
          "constant.language",
          "storage.modifier",
          "entity.other.ng-binding-name.template.html",
          "source.css meta.property-value",
          "string.regexp",
          "punctuation.definition.template-expression.begin",
          "support.type.object.module",
          "punctuation.separator.statement.and.shell"
        ],
        "settings": {
          "foreground": "#FFD14A"
        }
      },
      {
        "name": "blue",
        "scope": [
          "storage.type",
          "meta.definition.method",
          "meta.definition.function",
          "entity.name.type.class",
          "meta.function-call",
          "entity.name.tag",
          "entity.name.tag",
          "entity.other.attribute-name.id.css",
          "entity.other.attribute-name.class.css",
          "meta.at-rule.keyframes",
          "support.function.misc",
          "support.class.component",
          "support.function.builtin.shell",
          "entity.name.command.shell"
        ],
        "settings": {
          "foreground": "#00AEFF"
        }
      },
      {
        "name": "Cyan 200",
        "scope": [
          "meta.attribute",
          "entity.other.attribute-name.tsx",
          "entity.other.attribute-name.jsx",
          "entity.other.attribute-name.pseudo-class",
          "entity.other.attribute-name.pseudo-element",
          "storage.type.function",
          "storage.type.class",
          "entity.other.ng-binding-name.event.html",
          "entity.other.ng-binding-name.property"
        ],
        "settings": {
          "foreground": "#80DEEA"
        }
      },
      {
        "name": "[CSS] - Keyword",
        "scope": [
          "source.css punctuation.definition.keyword",
          "source.css keyword",
          "entity.name.tag.reference",
          "keyword.other.important",
          "string.unquoted.heredoc.expanded.shell",
          "keyword.control.at-rule",
          "punctuation.definition.tag.end",
          "punctuation.definition.tag.begin"
          //
        ],
        "settings": {
          "foreground": "#f6b"
        }
      },
      {
        "name": "types",
        "scope": [
          "entity.name.type",
          "support.type.primitive",
          "meta.interface",
          "storage.type.class.jsdoc",
          "variable.other.normal.shell",
          "variable.parameter.positional.shell",
          "variable.other.assignment.shell",
          // "support.type.builtin.tsx"
          "support.type.builtin"
        ],
        "settings": {
          "foreground": "#4DB6AC"
        }
      },
      {
        "name": "red test",
        "scope": [
          "storage.type.string",
          "meta.toc-list.id.html",
          "storage.identifier",
          "function.support",
          "function.support.builtin",
          "function.support.core" //
        ],
        "settings": {
          "foreground": "#F00"
        }
      }
    ]
  },

  /*
   * Terminal Settings
   */
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.env.osx": {},
  "terminal.integrated.defaultProfile.windows": "zsh",
  "terminal.integrated.fontFamily": "MonaspiceRn Nerd Font Propo",

  /*
   * Window Settings
   */
  "window.title": "${folderName}-Cat Zhang",
  "window.openFilesInNewWindow": "on",
  "window.titleBarStyle": "native",
  "window.customTitleBarVisibility": "never",

  /*
   * File Settings
   */
  "files.autoGuessEncoding": true,

  /*
   * File Nesting Settings
   */
  "fileNestingUpdater.autoUpdate": true,
  "fileNestingUpdater.autoUpdateInterval": 720,
  "fileNestingUpdater.promptOnAutoUpdate": true,
  "fileNestingUpdater.upstreamRepo": "antfu/vscode-file-nesting-config",
  "fileNestingUpdater.upstreamBranch": "main",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 7/19/2024, 9:29:19 AM",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "ansible.cfg": "ansible.cfg, .ansible-lint, requirements.yml",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json*, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README_*, RELEASE_NOTES*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme_*, release_notes*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.db": "*.db-shm, *.db-wal",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts,  $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.py": "$(capture).pyi",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).css.ts",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.w": "$(capture).*.w, I$(capture).w",
    "*.xaml": "$(capture).xaml.cs"
  },

  /*
   * Other Settings
   */
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "security.workspace.trust.untrustedFiles": "open",

  /*
   * Extension Settings
   */

  // ----------- Vim Settings -----------
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.timeout": 500,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "enter"],
      "commands": [":nohlsearch"]
    },
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      "before": ["K"],
      "after": ["5", "k"]
    },
    {
      "before": ["J"],
      "after": ["5", "j"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": [";"],
      "commands": ["workbench.action.showCommands"],
      "silent": true
    },
    {
      "before": ["leader", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["leader", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["leader", "a"],
      "commands": ["workbench.action.toggleActivityBarVisibility"]
    },
    {
      "before": ["leader", "b"],
      "commands": ["workbench.action.toggleStatusbarVisibility"]
    },
    {
      "before": ["leader", "g", "g"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["leader", "g", "f"],
      "commands": ["workbench.view.search"]
    },
    {
      "before": ["leader", "g", "n"],
      "commands": ["workbench.view.extensions"]
    },
    {
      "before": ["leader", "g", "e"],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["<leader>", "u"],
      "commands": ["editor.action.referenceSearch.trigger"]
    },
    {
      "before": ["<leader>", "U"],
      "commands": ["references-view.findReferences"]
    },
    {
      "before": ["<leader>", "i", "n"],
      "commands": ["references-view.showCallHierarchy"]
    },
    {
      "before": ["<leader>", "r"],
      "commands": ["workbench.action.files.save", "workbench.action.debug.run"]
    },
    {
      "before": ["<leader>", "d", "r"],
      "commands": [
        "workbench.action.files.save",
        "workbench.action.debug.start"
      ]
    },
    {
      "before": ["<leader>", "d", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    {
      "before": ["<leader>", "d", "c"],
      "commands": ["editor.debug.action.conditionalBreakpoint"]
    },
    {
      "before": ["<leader>", "r", "n"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<leader>", "d", "k"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["<leader>", "d", "j"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["s"],
      "after": ["<nop>"]
    },
    {
      "before": ["s", "j"],
      "commands": [":split"]
    },
    {
      "before": ["s", "l"],
      "commands": [":vsplit"]
    },
    {
      "before": ["<leader>", "k"],
      "after": ["<C-w>", "k"]
    },
    {
      "before": ["<leader>", "j"],
      "after": ["<C-w>", "j"]
    },
    {
      "before": ["<leader>", "h"],
      "after": ["<C-w>", "h"]
    },
    {
      "before": ["<leader>", "l"],
      "after": ["<C-w>", "l"]
    },
    {
      "before": ["t", "u"],
      "commands": [":tabe"]
    },
    {
      "before": ["t", "l"],
      "commands": [":tabnext"]
    },
    {
      "before": ["t", "h"],
      "commands": [":tabprev"]
    },
    {
      "before": ["t", "m", "l"],
      "commands": [":tabmove+"]
    },
    {
      "before": ["t", "m", "h"],
      "commands": [":tabmove-"]
    },
    {
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.terminal.toggleTerminal"]
    },
    {
      "before": ["<leader>", "m"],
      "commands": ["workbench.actions.view.problems"]
    },
    {
      "before": ["<leader>", "p"],
      "commands": ["workbench.action.output.toggleOutput"]
    },
    {
      "before": ["<leader>", "y"],
      "commands": ["workbench.debug.action.toggleRepl"]
    },
    {
      "before": ["<leader>", "a", "a"],
      "commands": ["editor.toggleFold"]
    },
    {
      "before": ["<leader>", "o"],
      "commands": ["editor.action.organizeImports"]
    },
    {
      "before": ["<leader>", "L"],
      "commands": ["turboConsoleLog.displayLogMessage"]
    },
    {
      "before": ["<leader>", "D"],
      "commands": ["turboConsoleLog.deleteAllLogMessages"]
    },
    {
      "before": ["<leader>", "C"],
      "commands": ["turboConsoleLog.commentAllLogMessages"]
    },
    {
      "before": ["<leader>", "C", "C"],
      "commands": ["turboConsoleLog.uncommentAllLogMessages"]
    },
    {
      "before": ["<leader>", "r", "f", "n"],
      "commands": ["fileutils.renameFile"]
    },
    {
      "before": ["<leader>", "d", "f"],
      "commands": ["fileutils.removeFile"]
    },
    {
      "before": ["<leader>", "n", "f"],
      "commands": ["fileutils.newFile"]
    },
    {
      "before": ["<leader>", "n", "f", "r"],
      "commands": ["fileutils.newFileAtRoot"]
    },
    {
      "before": ["<leader>", "n", "o"],
      "commands": ["fileutils.newFolder"]
    },
    {
      "before": ["<leader>", "n", "o", "r"],
      "commands": ["fileutils.newFolderAtRoot"]
    },
    {
      "before": ["<leader>", "m", "t"],
      "commands": ["fileutils.moveFile"]
    },
    {
      "before": ["<leader>", "p", "f"],
      "commands": ["fileutils.duplicateFile"]
    },
    {
      "before": ["<leader>", "g", "p"],
      "commands": ["workbench.view.extension.project-manager"]
    },
    {
      "before": ["<leader>", "p", "m"],
      "commands": ["projectManager.listProjects"]
    },
    {
      "before": ["<leader>", "p", "a"],
      "commands": ["projectManager.listAnyProjects#sideBarAny"]
    },
    {
      "before": ["<leader>", "m", "f"],
      "commands": ["projectManager.listFavoriteProjects#sideBarFavorites"]
    },
    {
      "before": ["<leader>", "p", "g"],
      "commands": ["projectManager.listGitProjects#sideBarGit"]
    },
    {
      "before": ["<leader>", "s", "p"],
      "commands": ["projectManager.saveProject"]
    },
    {
      "before": ["<leader>", "v", "i"],
      "commands": ["vite.showCommands"]
    },
    {
      "before": ["<leader>", "r", "m"],
      "commands": ["workbench.action.remote.showMenu"]
    },
    {
      "before": ["<leader>", "r", "p"],
      "commands": ["remoteHub.openRepository"]
    },
    {
      "before": ["t", "o"],
      "commands": ["workbench.view.extension.todo-tree-container"]
    },
    {
      "before": ["t", "e"],
      "commands": ["todo-tree.showTreeView"]
    },
    {
      "before": ["<leader>", "n", "a"],
      "commands": ["console-ninja.start"]
    },
    {
      "before": ["<leader>", "s", "o"],
      "commands": ["console-ninja.showOutput"]
    },
    {
      "before": ["<leader>", "n", "v"],
      "commands": ["console-ninja.watchLocationValue"]
    },
    {
      "before": ["<leader>", "n", "e"],
      "commands": ["console-ninja.goToLatestErrorSource"]
    },
    {
      "before": ["<leader>", "s", "s"],
      "commands": ["console-ninja.searchLogs"]
    },
    {
      "before": ["<leader>", "g", "l"],
      "commands": ["workbench.view.extension.gitlens"]
    },
    {
      "before": ["<leader>", "g", "h"],
      "commands": ["gitlens.toggleGraph"]
    },
    {
      "before": ["<leader>", "g", "m"],
      "commands": ["gitlens.gitCommands"]
    },
    {
      "before": ["<leader>", "t", "f"],
      "commands": ["gitlens.toggleFileChanges"]
    },
    {
      "before": ["<leader>", "r", "e"],
      "commands": ["gitlens.diffWithRevision"]
    },
    {
      "before": ["<leader>", "f", "p"],
      "commands": ["gitlens.diffWithPrevious"]
    },
    {
      "before": ["<leader>", "f", "n"],
      "commands": ["gitlens.diffWithNext"]
    },
    {
      "before": ["<leader>", "g", "s"],
      "commands": ["git.stageAll"]
    },
    {
      "before": ["<leader>", "o", "c"],
      "commands": ["git.openChange"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["git.commitMessageAccept"]
    },
    {
      "before": ["<leader>", "c", "d"],
      "commands": ["git.commitMessageDiscard"]
    },
    {
      "before": ["<leader>", "d", "p"],
      "commands": [
        "workbench.action.editor.previousChange",
        "editor.action.dirtydiff.previous"
      ]
    },
    {
      "before": ["<leader>", "d", "n"],
      "commands": [
        "workbench.action.editor.nextChange",
        "editor.action.dirtydiff.next"
      ]
    },
    {
      "before": ["<leader>", "p", "c"],
      "commands": ["workbench.action.openQuickChat.copilot"]
    },
    {
      "before": ["<leader>", "c", "s"],
      "commands": ["workbench.panel.chat.view.copilot.focus"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["n"],
      "commands": ["editor.action.moveSelectionToNextFindMatch"],
      "silent": true
    },
    {
      "before": ["M"],
      "commands": ["cursorUndo"],
      "silent": true
    },
    {
      "before": ["K"],
      "after": ["5", "k"]
    },
    {
      "before": ["J"],
      "after": ["5", "j"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["<leader>", "n"],
      "commands": ["editor.action.codeAction"]
    },
    {
      "before": ["<leader>", "L"],
      "commands": ["turboConsoleLog.displayLogMessage"]
    },
    {
      "before": ["<leader>", "D"],
      "commands": ["turboConsoleLog.deleteAllLogMessages"]
    },
    {
      "before": ["<leader>", "C"],
      "commands": ["turboConsoleLog.commentAllLogMessages"]
    },
    {
      "before": ["<leader>", "C", "C"],
      "commands": ["turboConsoleLog.uncommentAllLogMessages"]
    }
  ],
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },

  // ----------- Power Mode Settings-----------
  "powermode.enabled": true,
  "powermode.combo.location": "off",
  "powermode.combo.counterEnabled": "hide",
  "powermode.shake.enabled": false,

  // ----------- Apc Settings -----------
  "apc.activityBar": {
    "position": "bottom",
    "hideSettings": true,
    "size": 24,
    "itemMargin": 9
  },
  "apc.statusBar": {
    "position": "editor-bottom",
    "height": 20,
    "fontSize": 10
  },
  "apc.header": {
    "height": 35,
    "fontSize": 15
  },
  "apc.electron": {
    "frame": false,
    "vibrancy": "ultra-dark",
    "visualEffectState": "active"
  },
  "apc.sidebar.titlebar": {
    "height": 35,
    "fontSize": 13
  },
  "apc.listRow": {
    "height": 30,
    "fontSize": 14
  },
  "apc.menubar.compact": false,
  "apc.imports": [
    "file://${userHome}/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.3/dist/updateHandler.js",
    "file://${userHome}/.vscode/custom.css"
  ],

  // ----------- Error Lens Settings -----------
  "errorLens.statusBarIconsEnabled": true,
  "errorLens.gutterIconsEnabled": true,
  "errorLens.gutterIconSet": "emoji",
  "errorLens.gutterEmoji": {
    "error": "🦠",
    "warning": "🧙",
    "info": "🧼",
    "hint": "🌀"
  },
  "errorLens.enabledDiagnosticLevels": ["warning", "error", "hint"],
  "errorLens.gutterIconSize": "auto",
  "errorLens.delay": 500,
  "errorLens.fontWeight": "bold",
  "errorLens.fontStyleItalic": true,

  // ----------- Project Manager Settings -----------
  "projectManager.git.baseFolders": ["~/Developer"],

  // ----------- Vite Settings -----------
  "vite.autoStart": false,
  "vite.devCommand": "yarn dev",
  "vite.buildCommand": "yarn build",
  "vite.https": true,
  "vite.port": 5173,

  // ----------- Code Runner Settings -----------
  "code-runner.runInTerminal": true,
  "code-runner.saveAllFilesBeforeRun": true,
  "code-runner.saveFileBeforeRun": true,

  // ----------- Better Comments Settings -----------
  "better-comments.highlightPlainText": true,

  // ----------- Animations Settings -----------
  "animations.Enabled": true,
  "animations.Command-Palette": "Scale",
  "animations.Install-Method": "Apc Customize UI++",
  "animations.CursorAnimation": true,
  "animations.CursorAnimationOptions": {
    "Color": "#1979c2",
    "CursorStyle": "line"
  },
  "animations.Default-Duration": 200,

  // ----------- Git Settings -----------
  "git.autofetch": true,
  "gitlens.statusBar.enabled": false,
  "gitlens.changes.toggleMode": "window",
  "gitlens.heatmap.toggleMode": "window",
  "gitlens.fileAnnotations.dismissOnEscape": false,
  "gitlens.currentLine.fontStyle": "italic",
  "gitlens.currentLine.fontWeight": "bold",
  "diffEditor.ignoreTrimWhitespace": false,
  "update.mode": "default",
  "console-ninja.featureSet": "Community",

  // ----------- UniApp Settings -----------
  "create-uniapp-view.directory": true,
  "create-uniapp-view.name": "与文件夹同名",

  // ----------- Markdown Preview Settings -----------
  "markdown-preview-enhanced.previewColorScheme": "editorColorScheme",
  "markdown-preview-enhanced.previewTheme": "atom-dark.css",

  // ----------- Backgroud Settings -----------
  "background.fullscreen": {
    "images": [
      "https://raw.githubusercontent.com/CassandraCat/dotfiles/9de205ee65b325e1a51c320dabe2c08f1ed8552e/.config/wezterm/backdrops/ethereal-sea-angel.jpeg"
    ],
    "opacity": 0.85, // 0.85 ~ 0.95 recommended
    "size": "cover", // also css, `cover` to self-adaption (recommended)，or `contain`、`200px 200px`
    "position": "center", // alias to `background-position`, default `center`
    "interval": 0 // seconds of interval for carousel, default `0` to disabled.
  },

  // ----------- Code Runner Settings -----------
  "code-runner.clearPreviousOutput": true,
  "code-runner.ignoreSelection": true,
  "code-runner.preserveFocus": false,

  // ----------- C_Cpp Settings -----------
  "C_Cpp.debugShortcut": false,
  "C_Cpp.default.cppStandard": "c++17",
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4, BreakBeforeBraces: Attach }",

  // ----------- Prettier Settings -----------
  "prettier.tabWidth": 4,
  "notebook.defaultFormatter": "cschlosser.doxdocgen",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "prettier.jsxSingleQuote": true,
  "editor.accessibilitySupport": "off",
  "github.copilot.editor.enableAutoCompletions": true,
  "breadcrumbs.enabled": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "animations.Smooth-Mode": false,
  "editor.fontVariations": false,
  "vale.doNotShowWarningForFileToBeSavedBeforeLinting": true,
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  "redhat.telemetry.enabled": true,
  "[xml]": {
    "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
  "rsp-ui.enableStartServerOnActivation": [
    {
      "id": "redhat.vscode-community-server-connector",
      "name": "Community Server Connector",
      "startOnActivation": true
    }
  ],

  // ----------- Othner Settings -----------
  "indenticator.color.dark": "#01589b99",
  "workbench.statusBar.visible": false,
  "http.proxyAuthorization": null
}
