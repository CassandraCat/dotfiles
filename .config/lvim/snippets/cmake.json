{
  "init": {
    "prefix": "init",
    "body": [
      "cmake_minimum_required(VERSION ${1:2.8.2})",
      "project(${2:ProjectName})",
      "",
      "find_package(${3:library})",
      "",
      "include_directories(${$3_INCLUDE_DIRS})",
      "",
      "add_subdirectory(${0:src})",
      "",
      "add_executable($2)",
      "",
      "target_link_libraries($2 ${$3_LIBRARIES})"
    ],
    "description": "CMake project initialization with library find"
  },
  "proj": {
    "prefix": "proj",
    "body": ["project(${0:Name})"],
    "description": "CMake project name"
  },
  "min": {
    "prefix": "min",
    "body": ["cmake_minimum_required(VERSION ${0:2.8.2})"],
    "description": "CMake minimum required version"
  },
  "include": {
    "prefix": "include",
    "body": ["include_directories(${${0:include_dir}})"],
    "description": "Include directories"
  },
  "find": {
    "prefix": "find",
    "body": ["find_package(${1:library} ${0:REQUIRED})"],
    "description": "Find package"
  },
  "glob": {
    "prefix": "glob",
    "body": ["file(glob ${1:srcs} *.${0:cpp})"],
    "description": "Glob files for sources"
  },
  "subdir": {
    "prefix": "subdir",
    "body": ["add_subdirectory(${0:src})"],
    "description": "Add a subdirectory"
  },
  "lib": {
    "prefix": "lib",
    "body": ["add_library(${1:lib} ${${0:srcs}})"],
    "description": "Add a library"
  },
  "link": {
    "prefix": "link",
    "body": ["target_link_libraries(${1:bin} ${0:somelib})"],
    "description": "Link libraries to a binary"
  },
  "bin": {
    "prefix": "bin",
    "body": ["add_executable(${1:bin})"],
    "description": "Add an executable"
  },
  "set": {
    "prefix": "set",
    "body": ["set(${1:var} ${0:val})"],
    "description": "Set a variable"
  },
  "dep": {
    "prefix": "dep",
    "body": ["add_dependencies(${1:target}", "\t${0:dep}", ")"],
    "description": "Add dependencies"
  },
  "Ext_url": {
    "prefix": "Ext_url",
    "body": [
      "include(ExternalProject)",
      "ExternalProject_Add(${1:googletest}",
      "  URL ${2:http://googletest.googlecode.com/files/gtest-1.7.0.zip}",
      "  URL_HASH SHA1=${3:f85f6d2481e2c6c4a18539e391aa4ea8ab0394af}",
      "  SOURCE_DIR \"${4:${CMAKE_BINARY_DIR}/gtest-src}\"",
      "  BINARY_DIR \"${0:${CMAKE_BINARY_DIR}/gtest-build}\"",
      "  CONFIGURE_COMMAND \"\"",
      "  BUILD_COMMAND     \"\"",
      "  INSTALL_COMMAND   \"\"",
      "  TEST_COMMAND      \"\"",
      ")"
    ],
    "description": "External project from URL"
  },
  "Ext_git": {
    "prefix": "Ext_git",
    "body": [
      "include(ExternalProject)",
      "ExternalProject_Add(${1:googletest}",
      "  GIT_REPOSITORY    ${2:https://github.com/google/googletest.git}",
      "  GIT_TAG           ${3:master}",
      "  SOURCE_DIR        \"${4:${CMAKE_BINARY_DIR}/googletest-src}\"",
      "  BINARY_DIR        \"${0:${CMAKE_BINARY_DIR}/googletest-build}\"",
      "  CONFIGURE_COMMAND \"\"",
      "  BUILD_COMMAND     \"\"",
      "  INSTALL_COMMAND   \"\"",
      "  TEST_COMMAND      \"\"",
      ")"
    ],
    "description": "External project from Git repository"
  },
  "props": {
    "prefix": "props",
    "body": [
      "set_target_properties(${1:target}",
      "\t${2:properties} ${3:compile_flags}",
      "\t${0:\"-O3 -Wall -pedantic\"}",
      ")"
    ],
    "description": "Set target properties"
  },
  "test": {
    "prefix": "test",
    "body": ["add_test(${1:ATestName} ${0:testCommand --options})"],
    "description": "Add a test"
  }
}
